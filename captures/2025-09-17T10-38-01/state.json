{
  "stores": {
    "notes": {
      "roomNotes": {
        "sanctuaire": "# üïäÔ∏è Sanctuaire - Espace de m√©ditation\n\n## Vision\nCentre spirituel du projet, lieu de recul et de contemplation sur l'architecture globale.\n\n## Notes\n- Architecture 4x3 valid√©e\n- M√©taphore m√©di√©vale/fantasy comme fil conducteur\n- Chaque pi√®ce = un aspect du workflow dev",
        "chambre": "# üõèÔ∏è Chambre - Espace personnel\n\n## √âtat d'esprit\nLieu de repos et de r√©flexion personnelle. Journal intime du d√©veloppeur.\n\n## Mood actuel\nFocus intense sur l'architecture des stores üéØ",
        "cuisine": "# üç≥ Cuisine - Pr√©paration des id√©es\n\n## Recettes en cours\n- Mix Zustand + Persist\n- Sauce Redux trop lourde, abandon√©e\n- Marinade localStorage en cours\n\n## Ingr√©dients\n- React 18\n- Vite\n- Styled-components",
        "comptoir": "# üç∫ Comptoir - Discussions et √©changes\n\n## Conversations\n- Discussion avec Claude sur l'architecture\n- Feedback utilisateurs √† int√©grer\n- Id√©es de la communaut√©",
        "jardin": "# üåø Jardin - Croissance des id√©es\n\n## Plantations\n- Graine : Syst√®me de capture d'√©tat\n- Pousse : Component Catalog\n- Fleur : Navigation spatiale\n\n## √Ä arroser\n- Tests unitaires\n- Documentation",
        "atelier": "# üî® Atelier - Centre de production\n\n## Workspace principal\nC'est ici que tout se construit ! Les panneaux Roadmap et Todo sont synchronis√©s avec le store Projects.\n\n## Outils disponibles\n- √âditeur Markdown int√©gr√©\n- Roadmap visuelle\n- Todo avec priorit√©s\n- Export/Import Gist\n\n## Session actuelle\nFocus sur l'harmonisation des stores et le syst√®me de capture",
        "forge": "# ‚öíÔ∏è Forge - Hardcoding intensif\n\n## Fonderie de composants\n- NavigationArrows ‚úÖ\n- MarkdownEditor ‚úÖ\n- RoomCanvas ‚úÖ\n- ModalManager ‚úÖ\n\n## En cours de forge\n- SystemOverview component\n- ComponentCatalog\n- Capture system with Puppeteer",
        "boutique": "# üè™ Boutique - Pr√©sentation et d√©mo\n\n## Vitrine\nEspace pour pr√©senter les features termin√©es et les d√©mos interactives.\n\n## Catalogue\n- Dark theme m√©di√©val\n- Navigation immersive\n- Panneaux √©ditables\n- Persistance compl√®te",
        "scriptorium": "# üìú Scriptorium - Documentation\n\n## Manuscrits\n- Architecture.md\n- ComponentGuide.md\n- StorePattern.md\n\n## √Ä documenter\n- Syst√®me de navigation\n- Pattern des stores\n- Workflow de capture",
        "bibliotheque": "# üìö Biblioth√®que - R√©f√©rences et ressources\n\n## Livres consult√©s\n- React Patterns\n- Zustand Deep Dive\n- Medieval UI Design (inspiration)\n\n## R√©f√©rences\n- [Zustand Docs](https://zustand.docs.pmnd.rs/)\n- [Styled Components](https://styled-components.com/)\n- [Vite Guide](https://vitejs.dev/)",
        "cave": "# üïØÔ∏è Cave - Secrets et debug\n\n## Zones sombres\n- Performance de rendu dans RoomCanvas\n- Memory leak potentiel dans les listeners\n- Race condition sur le localStorage\n\n## Outils de debug\n- React DevTools ‚úÖ\n- Zustand DevTools ‚úÖ\n- Console logs strat√©giques"
      },
      "sideTowerNotes": {
        "general": "# üè∞ Tour de contr√¥le\n\n## Vue d'ensemble\nIRIMMetaBrain progresse bien ! L'architecture 4x3 rooms fonctionne parfaitement.\n\n## M√©triques\n- 12 rooms compl√®tes\n- 2 stores Zustand\n- 100% persistance\n- Navigation fluide\n\n## Prochaines √©tapes\n1. Finaliser la capture d'√©tat\n2. Impl√©menter ComponentCatalog\n3. Ajouter SystemOverview\n4. Tests et optimisations"
      }
    },
    "projects": {
      "selectedProject": "irimmetabrain",
      "projects": {
        "irimmetabrain": {
          "id": "irimmetabrain",
          "name": "IRIMMetaBrain",
          "type": "tool",
          "status": "dev_actif",
          "roadmapMarkdown": "# Roadmap\n\n## Phase 1 - Atelier habit√© ‚úì\n- [x] Migration **Zustand** + stores\n- [x] Panneaux √©ditables avec **markdown**\n- [x] Design system avec accents froids\n\n## Phase 2 - Expansion\n- [ ] Autres pi√®ces (Forge, Boutique, Chambre)\n- [ ] **Navigation** entre projets\n- [ ] Import/Export projets\n\n## Phase 3 - Pro Features\n- [ ] **Sync cloud** optionnelle\n- [ ] **Templates** de projets\n- [ ] **Analytics** et m√©triques\n\n---\n\n> *\"Medieval workspace meets modern productivity\"* üè∞",
          "todoMarkdown": "# Todo Atelier\n\n## üî¥ **Priorit√© Haute**\n- [x] Architecture **Zustand** (2 stores)\n- [x] **MarkdownEditor** avec GitHub Flavored\n- [ ] **Performance** et optimisations\n- [ ] **Tests** unitaires composants\n\n## üü° **Priorit√© Moyenne**\n- [ ] **Documentation** technique\n- [ ] **Accessibilit√©** (WCAG)\n- [ ] **Mobile** responsive design\n\n## üîµ **Backlog**\n- [ ] **Animations** transitions\n- [ ] **Shortcuts** clavier\n- [ ] **Themes** multiples\n\n---\n\n### Progression\n| Feature | Status | Notes |\n|---------|--------|-------|\n| Store Notes | ‚úì Done | Zustand + persist |\n| Store Projects | ‚úì Done | Auto-r√©f√©rencement |\n| UI Atelier | üöß WIP | Panneaux markdown |\n\n**Next:** Finaliser l'interface Atelier üöÄ",
          "atelierModules": {
            "roadmap": {
              "collapsed": false
            },
            "todo": {
              "collapsed": false
            },
            "mindlog": {
              "collapsed": true,
              "mood": "üî•",
              "note": "Architecture stores harmonis√©e !"
            },
            "actions": {
              "collapsed": true,
              "items": [
                {
                  "id": 1,
                  "text": "Impl√©menter isFirstRun",
                  "completed": true
                },
                {
                  "id": 2,
                  "text": "Harmoniser les stores",
                  "completed": false
                },
                {
                  "id": 3,
                  "text": "Finaliser capture",
                  "completed": false
                }
              ]
            },
            "screentv": {
              "collapsed": true,
              "screenshots": []
            }
          }
        }
      }
    }
  },
  "localStorage": {
    "irim-initialized": true
  },
  "url": "http://localhost:5173/",
  "timestamp": "2025-09-17T10:38:09.215Z",
  "debug": {
    "method": "__GET_ALL_STATE__",
    "rawStateKeys": ["notes", "projects"],
    "zustandPersist": {},
    "storeKeys": ["notes", "projects"],
    "localStorageKeys": ["irim-initialized"]
  }
}
